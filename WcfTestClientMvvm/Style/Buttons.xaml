<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WcfTestClientMvvm">
    <ResourceDictionary.MergedDictionaries >
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Texts.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type Button}" x:Key="WindowButton">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundGreyBrush}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" 
                                   HorizontalAlignment="Center"
                                   Text="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <RadialGradientBrush GradientOrigin="0.5,-2" Center="0.5,0.5" RadiusY="0.3">
                            <GradientStop Color="Transparent" Offset="1"/>
                            <GradientStop Color="White"/>
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" 
           BasedOn="{StaticResource WindowButton}"
           x:Key="WindowCloseButton">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <RadialGradientBrush GradientOrigin="0.5,-2" Center="0.5,0.5" RadiusY="0.3">
                            <GradientStop Color="Transparent" Offset="1"/>
                            <GradientStop Color="Red"/>
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="HostEntrysButton">
        <Setter Property="Background" Value="{StaticResource BackgroundHostEntrybuttonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{StaticResource FamilySizeRegular}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Grid>
                        <TextBlock Text="{TemplateBinding Content}"
                                   Focusable="False"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   Visibility="{TemplateBinding local:IsBussyProperty.Value, 
                                                   Converter={local:BoolToVisibilityConverter}, ConverterParameter='True'}"/>

                            <TextBlock FontFamily="{StaticResource FontAwesome}"
                                       Style="{StaticResource SpinningText}"
                                       Focusable="False"
                                       Visibility="{TemplateBinding local:IsBussyProperty.Value, 
                                                   Converter={local:BoolToVisibilityConverter}}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
            
            
        </Setter>
        
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.2"
                                        Storyboard.TargetProperty="Background.Color"
                                        From="{StaticResource BackgroundHostEntrybutton}"
                                        To="{StaticResource BackgroundHoverHostEntrybutton}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Duration="0:0:0.2"
                                        Storyboard.TargetProperty="Background.Color"
                                        To="{StaticResource BackgroundHostEntrybutton}"
                                        From="{StaticResource BackgroundHoverHostEntrybutton}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
        
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="InvokeButton">
        <Setter Property="Background" Value="{StaticResource InvokeButtonBeckgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundWhiteBrush}"/>
        <Setter Property="Margin" Value="2 2 10 2"/>
        <Setter Property="FontSize" Value="{StaticResource FamilySizeRegular}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border SnapsToDevicePixels="True"
                            CornerRadius="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="2">
                        <Grid>
                            <TextBlock Text="{TemplateBinding Content}"
                                       Focusable="False"
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.3"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    From="{StaticResource InvokeButtonBeckground}"
                                                    To="{StaticResource InvokeButtonHoverBackground}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.3"
                                                    Storyboard.TargetProperty="Background.Color"
                                                    To="{StaticResource InvokeButtonBeckground}"
                                                    From="{StaticResource InvokeButtonHoverBackground}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>